/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.wipp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

/**
 *
 * @author tester
 */
public class frmBssConnect extends javax.swing.JFrame {

    private WpaBssSta m_BssSta;
    private BssConnect conn;
    private Timer tmrLog = new Timer(100, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent ae) {
            if(conn != null){
                String temp = conn.getLog().toString();
                if(temp.length()>0){
                    conn.setLog(new StringBuilder());
                    txtBssLog.append("\n" + temp);
                }
            }
        }
    });
    /**
     * Creates new form frmBssConnect
     * @param p_Bss
     */
    public frmBssConnect(WpaBssSta p_Bss) {
        initComponents();
        this.m_BssSta = p_Bss;
        UpdatePassword();
        tmrLog.start();
        lblBssSSID.setText(m_BssSta.getSSID());
        lblBssSecurity.setText(m_BssSta.getSecurity());
        lblBssChiper.setText(m_BssSta.getChiper());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBssPassword = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        txtLog = new javax.swing.JScrollPane();
        txtBssLog = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        lblBssSSID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblBssSecurity = new javax.swing.JLabel();
        lblBssChiper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel1.setText("Password");

        txtBssPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBssPassword.setText("1234567890");
        txtBssPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBssPasswordKeyTyped(evt);
            }
        });

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        txtBssLog.setColumns(20);
        txtBssLog.setRows(5);
        txtLog.setViewportView(txtBssLog);

        jLabel2.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel2.setText("SSID:");

        lblBssSSID.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lblBssSSID.setText("SSID");

        jLabel3.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel3.setText("Security:");

        jLabel4.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel4.setText("Chiper:");

        lblBssSecurity.setText("Security");

        lblBssChiper.setText("Security");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLog, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnConnect)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBssPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblBssSecurity)
                                        .addGap(81, 81, 81)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblBssChiper))
                                    .addComponent(lblBssSSID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblBssSSID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(lblBssSecurity)
                    .addComponent(lblBssChiper))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBssPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConnect)
                .addGap(18, 18, 18)
                .addComponent(txtLog, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        this.Connect();
    }//GEN-LAST:event_btnConnectActionPerformed

    private void txtBssPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBssPasswordKeyTyped
        UpdatePassword();
    }//GEN-LAST:event_txtBssPasswordKeyTyped

    private void UpdatePassword(){
        String pass = txtBssPassword.getText();
        this.m_BssSta.setPassword(pass);
    }
    private void Connect(){
        UpdatePassword();
        String temp = "";
        String connScript = "";
        
        if(this.m_BssSta.getSecurity().equals(WfaEncryption.wpa) || this.m_BssSta.getSecurity().equals(WfaEncryption.wpa2)){
            connScript = "ConnectWPA.sh ";
        }else if(this.m_BssSta.getSecurity().equals(WfaEncryption.wep)){
            connScript = "ConnectWEP.sh ";
        } else {
            connScript = "ConnectOPEN.sh ";
        }
        String cmd = "./Scripts/" + connScript +
            this.m_BssSta.getSSID() + " " +
            this.m_BssSta.getPassword() + " " +
            this.m_BssSta.getSecurity() + " " +
            this.m_BssSta.getChiper();
        
        txtBssLog.append("\n" + cmd);
        
        conn = new BssConnect();
        conn.setCmd_Connect(cmd);
        new Thread(conn).start();
        
        txtBssLog.append("\n Start connection ...");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBssConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBssConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBssConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBssConnect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBssConnect(new WpaBssSta()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblBssChiper;
    private javax.swing.JLabel lblBssSSID;
    private javax.swing.JLabel lblBssSecurity;
    private javax.swing.JTextArea txtBssLog;
    private javax.swing.JTextField txtBssPassword;
    private javax.swing.JScrollPane txtLog;
    // End of variables declaration//GEN-END:variables
}
